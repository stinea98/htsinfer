{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Issue#17: Extend motifs based on nucleotide representation in sequenced reads
\f1\b0 \cf2 \expnd0\expndtw0\kerning0
\
\cf0 \kerning1\expnd0\expndtw0 \

\f0\b Issue description: 
\f1\b0 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
Given a set of core motifs (input: list of core motifs), check whether they represent parts of longer motifs in sequenced reads (input: list of reads). Extend left and right if the nucleotide composition in these positions is very biased. \'97> output: list of extended motifs?\
\
That is, starting from all occurrences of a core motif in the reads, \'97> find core motif in every read: starting and end position of core motif in read\
determine the frequencies of A,C,G,T at the left- and right-flanking positions, and calculate the entropy of this distribution. Ideally, the motif can be extended if the flanking positions contain one specific nucleotide, i.e. entropy is 0. \'97> compute entropy (what exact formula should be used? negative sum of pi*log(pi) over all nucleotides?\
\
But sequencing errors could introduce some noise. So it may be necessary to introduce a cutoff. \'97> define entropy cutoff and decide if motif can be extended\
\
Continue the extension greedily until the entropy becomes too high. \'97> isn\'92t the maximum entropy defined? what about a stop when you can neither extend right or left?\
\
https://bioinformatics.stackexchange.com/questions/6977/python-finding-a-motif-input-a-txt-file-with-10-sequences-and-10-motifs\
\pard\pardeftab720\sl280\partightenfactor0

\f2 \cf2 def BruteForce(s, t):\
    occurrences = []\
    for i in range(len(s)-len(t)+1): # loop over alignment\
        match = True\
        for j in range(len(t)): # loop over characters\
            if s[i+j] != t[j]:  # compare characters\
                match = False   # mismatch\
                break\
        if match:   # allchars matched\
            occurrences.append(i)\
\
    print(occurrences)\
\
this outputs each motifs starting position in every sequenced read\
\

\f3\b Proposal:\
\

\f2\b0 Input: list of core motifs & list of reads\
Output: list of extended motifs\
\
1) find core motif in every read (record start and end position)\
2) determine the frequencies of nucleotides at the left- and right-flanking positions, compute the percentage of each nucleotide at the positions\
and the calculate the entropy at each position\
\'97> is the following formula for entropy correct? entropy = - sum(P(i)*log10(P(i)) over all nucleotides(i)\
3) if entropy>cutoff: extend motif in the right/left flanking position \
4) continue until entropy<cutoff for both right and left flanking position\
\
I don\'92t understand the following sentence: \'93Continue the extension greedily until the entropy becomes too high\'94\
What does \'93greedily\'94 mean? And isn\'92t there a max entropy?\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 \
\
}